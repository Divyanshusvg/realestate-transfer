<!-- *******************
    Preloader start
********************-->
<body>
  <div id="preloader">
    <div class="sk-three-bounce">
      <div class="sk-child sk-bounce1"></div>
      <div class="sk-child sk-bounce2"></div>
      <div class="sk-child sk-bounce3"></div>
    </div>
  </div>
  <!--*******************
        Preloader end
    ********************-->

  <!--**********************************
        Main wrapper start
    ***********************************-->
  <div id="main-wrapper">
    <%- include('../../partials/header') %> <%-
    include('../../partials/sideBar') %>
    <div class="content-body">
      <!-- row -->
      <div class="container-fluid">
        <div class="card shadow">
          <div
            class="card-header border-0 d-flex justify-content-between mb-4 align-items-center"
          >
            <h3 class="mb-0">Properties</h3>
          </div>
          <div class="d-flex mx-4 justify-content-between mb-4">
            <!-- Search Input -->
            <input
              type="text"
              id="searchInput"
              class="form-control"
              placeholder="Search Properties"
              style="width: 300px"
            />

            <!-- Limit Dropdown -->
            <select id="limitSelect" class="form-control" style="width: 150px">
              <option value="10">10 per page</option>
              <option value="25">25 per page</option>
              <option value="50">50 per page</option>
              <option value="100">100 per page</option>
            </select>
          </div>
          <div class="table-responsive">
            <table class="dataTable table align-items-center table-flush">
              <thead class="thead-light">
                <tr class="text-center">
                  <th scope="col">#</th>
                  <th scope="col" class="text-left">Name</th>
                  <th scope="col" class="text-left">Address</th>
                  <th scope="col">ownerName</th>
                  <th scope="col">Bedroom</th>
                  <th scope="col">Bathroom</th>
                  <th scope="col">Description</th>
                  <!-- <th scope="col">Status</th> -->
                  <th scope="col" class="text-center">Actions</th>
                </tr>
              </thead>
              <tbody>
                <% prop?.docs.forEach((element, index) => { %>
                <tr>
                  <td ><h6><%= index + 1 %></h6></td>
                  <td ><h6><%= element?.propertyName %></h6></td>
                  <td class="text-black">
                    <h6>
                      <%= element.propertyAddress.streetNumber %> 
                      <%= element.propertyAddress.street %>, 
                      <%= element.propertyAddress.address %>, 
                      <%= element.propertyAddress.city %>, 
                      <%= element.propertyAddress.postalCode %>
                  </h6>
                  </td> 
                  <td class="text-center"><h6><%= element.owner_info[0].userName %></h6></td>
                  <td class="text-center"><h6><%= element.noOfBedroom %></h6></td>
                  <td class="text-center"><h6><%= element.noOfBathroom %></h6></td>
                  <td class="text-center"><h6><%= element.propertyDescription %></h6></td>
                  <!-- <td>
                                            <% if (element.status == 1) { %>
                                                <span class="badge badge-rounded badge-success">Active</span>
                                            <% } else { %>
                                                <span class="badge badge-rounded badge-danger">Inactive</span>
                                            <% } %>
                                        </td> -->
                  <td class="text-center">
                    <!-- edit button  -->
                    <!-- <button
                      type="button"
                      class="btn btn-sm btn-primary"
                      data-toggle="modal"
                      data-target="#editModal"
                      data-id="<%= element._id %>"
                      data-name="<%= element.propertyName %>"
                      data-status="<%= element.status %>"
                    >
                      <i class="fa fa-edit"></i> Edit
                    </button> -->
                    <button
                      type="button"
                      class="btn btn-sm btn-danger"
                      data-toggle="modal"
                      data-target="#deleteModal"
                      data-id="<%= element._id %>"
                      data-name="<%= element.propertyName %>"
                    >
                      <i class="fa fa-trash"></i> Delete
                    </button>
                  </td>
                </tr>
                <% }) %>
              </tbody>
            </table>
            <!-- pagination -->
            <nav aria-label="Page navigation">
              <ul class="pagination justify-content-end mr-3">
                <li class="page-item <%= prop.page === 1 ? 'disabled ' : '' %>">
                  <a
                    class="page-link"
                    href="?page=<%= prop.page - 1 %>&limit=<%= prop.limit %>"
                    aria-label="Previous"
                  >
                    <span aria-hidden="true">&laquo;</span>
                  </a>
                </li>
                <% for (let i = 1; i <= Math.ceil(prop.totalDocs / prop.limit);
                i++) { %>
                <li class="page-item <%= prop.page === i ? 'active' : '' %>">
                  <a
                    class="page-link"
                    href="?page=<%= i %>&limit=<%= prop.limit %>"
                    ><%= i %></a
                  >
                </li>
                <% } %>
                <li
                  class="page-item <%= prop.page === Math.ceil(prop.totalDocs / prop.limit) ? 'disabled' : '' %>"
                >
                  <a
                    class="page-link"
                    href="?page=<%= prop.page + 1 %>&limit=<%= prop.limit %>"
                    aria-label="Next"
                  >
                    <span aria-hidden="true">&raquo;</span>
                  </a>
                </li>
              </ul>
            </nav>
          </div>
        </div>

        <!-- Edit Modal -->
        <div
          class="modal fade"
          id="editModal"
          tabindex="-1"
          role="dialog"
          aria-labelledby="editModalLabel"
          aria-hidden="true"
        >
          <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">
                  Edit Property
                </h5>
                <button
                  type="button"
                  class="close"
                  data-dismiss="modal"
                  aria-label="Close"
                >
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <form id="editForm">
                  <div class="form-group">
                    <label for="editPropertyName">Name</label>
                    <input
                      type="text"
                      class="form-control"
                      id="editPropertyName"
                      name="name"
                      required
                    />
                  </div>
                  <input type="hidden" id="editPropertyId" name="id" />
                  <!-- Add other fields as necessary -->
                </form>
              </div>
              <div class="modal-footer">
                <button
                  type="button"
                  class="btn btn-secondary"
                  data-dismiss="modal"
                >
                  Close
                </button>
                <button
                  type="button"
                  class="btn btn-primary"
                  id="saveEditChanges"
                >
                  Save changes
                </button>
              </div>
            </div>
          </div>
        </div>

        <!-- Add Modal -->
        <div
          class="modal fade"
          id="addModal"
          tabindex="-1"
          role="dialog"
          aria-labelledby="addModalLabel"
          aria-hidden="true"
        >
          <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="addModalLabel">
                  Add Property Type
                </h5>
                <button
                  type="button"
                  class="close"
                  data-dismiss="modal"
                  aria-label="Close"
                >
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <form id="addForm">
                  <div class="form-group">
                    <label for="addPropertyName">Name</label>
                    <input
                      type="text"
                      class="form-control"
                      id="addPropertyName"
                      name="name"
                      required
                    />
                  </div>
                  <!-- Add other fields as necessary -->
                </form>
              </div>
              <div class="modal-footer">
                <button
                  type="button"
                  class="btn btn-secondary"
                  data-dismiss="modal"
                >
                  Close
                </button>
                <button
                  type="button"
                  class="btn btn-primary"
                  id="saveAddChanges"
                >
                  Add Property Type
                </button>
              </div>
            </div>
          </div>
        </div>

        <!-- Delete Modal -->
        <div
          class="modal fade"
          id="deleteModal"
          tabindex="-1"
          role="dialog"
          aria-labelledby="deleteModalLabel"
          aria-hidden="true"
        >
          <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">
                  Delete Property
                </h5>
                <button
                  type="button"
                  class="close"
                  data-dismiss="modal"
                  aria-label="Close"
                >
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <p>
                  Are you sure you want to delete the property <strong
                    id="deletePropertyName"
                  ></strong
                  >?
                </p>
                <form id="deleteForm">
                  <input type="hidden" id="deletePropertyId" name="id" />
                </form>
              </div>
              <div class="modal-footer">
                <button
                  type="button"
                  class="btn btn-secondary"
                  data-dismiss="modal"
                >
                  No
                </button>
                <button type="button" class="btn btn-danger" id="confirmDelete">
                  Yes
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <%- include('../../partials/footer') %>
  </div>
</body>

<script>
  // Populate the edit modal with existing data
  $(document).ready(function () {
    // Populate the edit modal with existing data
    $(document).on(
      "click",
      '[data-toggle="modal"][data-target="#editModal"]',
      function () {
        const id = $(this).data("id");
        const name = $(this).data("name");

        $("#editPropertyId").val(id);
        $("#editPropertyName").val(name);
      }
    );
    function getQueryParam(param) {
    const urlParams = new URLSearchParams(window.location.search);
    return urlParams.get(param);
  }

  // Set the limit dropdown value based on URL parameter
    const limit = getQueryParam('limit') || '10'; // Default to 10 if no limit is provided
    $('#limitSelect').val(limit);

    // Handle save changes for the edit form
    $("#saveEditChanges").on("click", function () {
      const id = $("#editPropertyId").val();
      const name = $("#editPropertyName").val();

      fetch("/editProperty", {
        // Replace with your endpoint
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        credentials: "include",
        body: JSON.stringify({
          id: id,
          propertyName: name,
        }),
      })
        .then((response) => response.json())
        .then((result) => {
          if (result.success) {
            location.reload(); // Reload the page to reflect changes
          } else {
            console.error("Error updating property:", result.message);
          }
        })
        .catch((error) => {
          console.error("Error updating property:", error);
        });
    });

    // Populate the delete modal with existing data
    $(document).on(
      "click",
      '[data-toggle="modal"][data-target="#deleteModal"]',
      function () {
        const id = $(this).data("id");
        const name = $(this).data("name");

        $("#deletePropertyId").val(id);
        $("#deletePropertyName").text(name);
      }
    );

    // Handle delete confirmation
    $("#confirmDelete").on("click", function () {
      const id = $("#deletePropertyId").val();

      fetch("/editProperty", {
        // Replace with your endpoint
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        credentials: "include",
        body: JSON.stringify({
          id: id,
          del:true
        }),
      })
        .then((response) => response.json())
        .then((result) => {
          if (result.success) {
            location.reload(); // Reload the page to reflect changes
          } else {
            console.error("Error deleting property:", result.message);
          }
        })
        .catch((error) => {
          console.error("Error deleting property:", error);
        });
    });

    // Search functionality
    $("#searchInput").on("keyup", function () {
      const value = $(this).val().toLowerCase();
      $(".dataTable tbody tr").each(function () {
        const row = $(this);
        const text = row.text().toLowerCase();
        row.toggle(text.indexOf(value) > -1);
      });
    });

    // Limit dropdown functionality
    $("#limitSelect").on("change", function () {
      const limit = $(this).val();
      const url = new URL(window.location.href);
      url.searchParams.set("limit", limit);
      url.searchParams.set("page", 1); // Reset to the first page when changing the limit
      window.location.href = url.toString();
      // Update the limit in the URL or make an AJAX request to fetch the new limit
      // For example:
    });
  });
</script>
